# 渲染上下文

渲染上下文，即渲染函数的变量环境，我们在模板中访问的变量即通过渲染上下文获取。

setup 函数的返回对象怎么与模板上下文建立联系？

渲染上下文 instance.ctx 

1. 非 $
   1. accessCache
   2. setupState 
   3. option data
   4. props
   5. ctx
2. $
   1. vue 公开方法
   2. css module
   3. ctx 用户自定义
   4. 全局 appContext.config.globalProperties

我们可以看到这里定义了 accessCache 作为渲染代理的属性访问缓存，它具体是干什么的呢？组件在渲染时会经常访问数据进而触发 get 函数，这其中最昂贵的部分就是多次调用 hasOwn 去判断 key 在不在某个类型的数据中，但是在普通对象上执行简单的属性访问相对要快得多。所以在第一次获取 key 对应的数据后，我们利用 accessCache[key] 去缓存数据，下一次再次根据 key 查找数据，我们就可以直接通过 accessCache[key] 获取对应的值，就不需要依次调用 hasOwn 去判断了。这也是一个性能优化的小技巧。

hasOwnProperty

组件 vnode children 与 slot 一样？

shapeFlag 用于表明该 vnode 是什么类型的