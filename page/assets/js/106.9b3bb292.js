(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{588:function(e,n,t){"use strict";t.r(n);var o=t(47),l=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("推荐阅读")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/1Wm-iYFBgJXMg_7SgWktXA",target:"_blank",rel:"noopener noreferrer"}},[e._v("关于现代包管理器的深度思考——为什么现在我更推荐 pnpm 而不是 npm/yarn?"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://pnpm.js.org/blog/2020/05/27/flat-node-modules-is-not-the-only-way/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flat node_modules is not the only way"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.kochan.io/nodejs/why-should-we-use-pnpm.html#disqus_thread",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why should we use pnpm?"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.kochan.io/nodejs/pnpms-strictness-helps-to-avoid-silly-bugs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("pnpm's strictness helps to avoid silly bugs"),t("OutboundLink")],1)])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("特点")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("安装快，磁盘空间利用效率高")]),e._v(" "),t("ul",[t("li",[e._v("不会重复安装同一个包")]),e._v(" "),t("li",[e._v("版本管理单位为 单文件")]),e._v(" "),t("li",[e._v("基于内容寻址")])])]),e._v(" "),t("li",[t("p",[e._v("支持 monorepo")])]),e._v(" "),t("li",[t("p",[e._v("安全性高")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("校验包完整性")])]),e._v(" "),t("li",[t("p",[e._v("npm/yarn 依赖管理")]),e._v(" "),t("ul",[t("li",[e._v("npm 3 之前 "),t("code",[e._v("嵌套结构")]),e._v(" "),t("ul",[t("li",[e._v("过度嵌套")]),e._v(" "),t("li",[e._v("重复安装、占用空间")])])]),e._v(" "),t("li",[e._v("npm 3 之后及 yarn "),t("code",[e._v("扁平化结构")]),e._v(" "),t("ul",[t("li",[e._v("依赖结构的"),t("strong",[e._v("不确定性")]),e._v("，依据声明顺序")]),e._v(" "),t("li",[e._v("扁平化算法本身的"),t("strong",[e._v("复杂性")]),e._v("很高，耗时较长")]),e._v(" "),t("li",[e._v("项目中仍然可以"),t("strong",[e._v("非法访问")]),e._v("没有声明过依赖的包，因为 Node Module Resolution")])])])])]),e._v(" "),t("li",[t("p",[e._v("pnpm 独创的依赖管理")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("node_modules 只存在 package 上声明的依赖，保证结构对应，清晰明了；")]),e._v(" "),t("p",[e._v("而且你的代码就只能加载到项目 node_modules 里的依赖，保证安全性、严谨性")]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210324174810561.png",alt:"image-20210324174810561"}}),e._v(" "),t("p",[e._v("但点开 qiankun 并没有发 node_modules，那 qiankun 的依赖呢？")]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210324220122020.png",alt:"image-20210324220122020"}})]),e._v(" "),t("li",[t("p",[e._v("qiankun 只是个软链接，映射到 .pnpm/qiankun@2.4.0")]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210327112011578.png",alt:"image-20210327112011578"}}),e._v(" "),t("p",[e._v("pnpm 会把 qiankun 及其依赖平级放在 node_modules 目录下，这种设计巧妙得利用并兼容 Node Module Resolution 机制使用 qiankun 能够访问其依赖，而它的依赖也同样是软链接，映射到 .pnpm 下的包")]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210327112333206.png",alt:"image-20210327112333206"}}),e._v(" "),t("blockquote",[t("p",[t("code",[e._v(".pnpm/")]),e._v("会以平铺的形式储存着所有的包，每个包都可以在这种命名模式的文件夹中被找到：")]),e._v(" "),t("p",[t("code",[e._v(".pnpm/<name>@<version>/node_modules/<name>")])]),e._v(" "),t("p",[e._v("并且每个包及其依赖以平级形式放在 node_modules 下,  如")]),e._v(" "),t("div",{staticClass:"language-txt extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("qiankun@2.4.0\n└── node_modules\n    ├── @babel\n    │   └── runtime -> ../../../@babel/runtime@7.13.10/node_modules/@babel/runtime\n    ├── import-html-entry -> ../../import-html-entry@1.11.1/node_modules/import-html-entry\n    ├── lodash -> ../../lodash@4.17.21/node_modules/lodash\n    ├── qiankun\n    │   ├── LICENSE\n    │   ├── README.md\n    │   ├── dist\n    │   ├── es\n    │   ├── lib\n    │   └── package.json\n    ├── single-spa -> ../../single-spa@5.8.1/node_modules/single-spa\n    └── tslib -> ../../tslib@1.14.1/node_modules/tslib\n")])])])]),e._v(" "),t("blockquote",[t("p",[e._v("pnpm 这个评级的结构与 npm v3,4,5,6 或 yarn v1 不同的是，它对包之间进行相互隔离。")]),e._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210324223321353.png",alt:"image-20210324223321353"}}),e._v(" "),t("p",[e._v("因为中间多了个 .pnpm 阻碍了 Node Module Resolution 机制")]),e._v(" "),t("ol",[t("li",[e._v("它完全适配了 Node.js。")]),e._v(" "),t("li",[e._v("包与包的依赖很好的被分组在一起。")])])])])])])])])])]),e._v(" "),t("li",[t("p",[e._v("Monorepo 操作")]),e._v(" "),t("ul",[t("li",[e._v("依赖操作\n"),t("ul",[t("li",[e._v("root\n"),t("ul",[t("li",[e._v("add 默认只能在 workspace 中，"),t("code",[e._v("-W")]),e._v(" 可作用于 root workspace")])])]),e._v(" "),t("li",[e._v("所有子项/单个子项目 "),t("code",[e._v("--filter xxx")]),e._v(" "),t("ul",[t("li",[e._v('pnpm add qiankun --filter="{projects}" 对所有')])])]),e._v(" "),t("li",[e._v("默认提升全局 "),t("code",[e._v("hoist: true")])])])]),e._v(" "),t("li",[e._v("任务操作")])])])]),e._v(" "),t("hr"),e._v(" "),t("Vssue",{attrs:{title:e.$title}})],1)}),[],!1,null,null,null);n.default=l.exports}}]);