(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{615:function(v,_,t){"use strict";t.r(_);var d=t(47),l=Object(d.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("ul",[t("li",[v._v("链表\n"),t("ul",[t("li",[v._v("LRU")]),v._v(" "),t("li",[v._v("单链表，回文字符串")]),v._v(" "),t("li",[v._v("链表中环的检测")]),v._v(" "),t("li",[v._v("两个有序的链表合并")]),v._v(" "),t("li",[v._v("删除链表倒数第 n 个结点")]),v._v(" "),t("li",[v._v("求链表的中间结点")])])])]),v._v(" "),t("p",[v._v("解题思路：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("链表")]),v._v(" "),t("ul",[t("li",[v._v("考操作")]),v._v(" "),t("li",[v._v("注意空指针\n"),t("ul",[t("li",[t("code",[v._v("head && head.next;")])]),v._v(" "),t("li",[v._v("头部指针")])])])])]),v._v(" "),t("li",[t("p",[v._v("什么时候数据结构")]),v._v(" "),t("ul",[t("li",[v._v("栈\n"),t("ul",[t("li",[v._v("最近重复、相关")]),v._v(" "),t("li",[v._v("洋葱模型")])])])])]),v._v(" "),t("li",[t("p",[v._v("解题总思路：")]),v._v(" "),t("p",[v._v("计算机本身就是“死脑”，只能 if else 、loop、递归，这也是最基本算法")]),v._v(" "),t("p",[v._v("很多算法问题基本跑不开上面基本算法围子，所以思考的时候能不能先")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("暴力（多重循环计算等）")])]),v._v(" "),t("li",[t("p",[v._v("列基本情况、泛花问题，找出最近重复子问题、（递归、数学归纳、更加抽象）")])])])]),v._v(" "),t("li",[t("p",[v._v("技巧")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("一维升二维")])]),v._v(" "),t("li",[t("p",[v._v("排序去重")])]),v._v(" "),t("li",[t("p",[v._v("有些最原始暴力解法就是多重循环，利用 "),t("strong",[v._v("hash 缓存结果、空间换时间，减少循环次数")])])]),v._v(" "),t("li",[t("p",[v._v("多指针查询数据")]),v._v(" "),t("p",[v._v("如果一次只找一个数，那你得多次遍历才能拿到多个数据")]),v._v(" "),t("p",[v._v("当数据是相关数，意味着你需要嵌套循环，这无疑会增加时间复杂度，")]),v._v(" "),t("p",[v._v("通过多指针压缩遍历层数，也就是在同一层循环中同时找多个数")]),v._v(" "),t("p",[v._v("但需要确定多指针间的关系")]),v._v(" "),t("ul",[t("li",[v._v("双指针\n"),t("ul",[t("li",[v._v("夹逼，左右大小移动关系；中间左右扩撒（一层循环遍历）")]),v._v(" "),t("li",[v._v("快慢关系")])])])])])])])]),v._v(" "),t("p",[v._v("计划说明：")]),v._v(" "),t("ol",[t("li",[v._v("每个题目至少训练五遍")]),v._v(" "),t("li",[v._v("简单题目 15 分钟、中等 30 分钟、难 45分钟（视个人情况而定）")]),v._v(" "),t("li",[v._v("次数说明\n"),t("ol",[t("li",[t("p",[v._v("思考不出，直接看优解，理解照抄一遍、背诵、默写一遍")])]),v._v(" "),t("li",[t("p",[v._v("第二天尝试写一遍")])]),v._v(" "),t("li",[t("p",[v._v("第二周写一遍")])]),v._v(" "),t("li",[t("p",[v._v("一个月内写一遍")])]),v._v(" "),t("li",[t("p",[v._v("面试前练习一遍")])])])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("题目")]),v._v(" "),t("th",[v._v("一(背诵)")]),v._v(" "),t("th",[v._v("二（默写）")]),v._v(" "),t("th",[v._v("三（练习）")]),v._v(" "),t("th",[v._v("四（加强）")]),v._v(" "),t("th",[v._v("五（复习）")]),v._v(" "),t("th",[v._v("标签")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/反转链表.html"}},[v._v("单链表反转")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("链表")])]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/合并两个有序的链表.html"}},[v._v("合并两个有序的链表")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("链表、双指针")])]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/两两交换链表中的节点.html"}},[v._v("两两交换链表中的节点")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("链表、递归")])]),v._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://leetcode.com/problems/reverse-nodes-in-k-group/",target:"_blank",rel:"noopener noreferrer"}},[v._v("K 个一组翻转链表"),t("OutboundLink")],1)]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/环形链表.html"}},[v._v("环形链表")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/两数之和.html"}},[v._v("两数之和")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("数组、hash 缓存")])]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/三数之和.html"}},[v._v("三数之和")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("数组、双指针")])]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/爬楼梯.html"}},[v._v("爬楼梯")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/移动零.html"}},[v._v("移动零")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("数组、双指针、快排")])]),v._v(" "),t("tr",[t("td",[t("RouterLink",{attrs:{to:"/数据结构与算法/codes/盛最多水的容器.html"}},[v._v("盛最多水的容器")])],1),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-parentheses/",target:"_blank",rel:"noopener noreferrer"}},[v._v("有效的括号"),t("OutboundLink")],1)]),v._v(" "),t("td",[v._v("✓")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("表达式求值")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("浏览器前进后退")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("最长不重复子串")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("LRU")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("小偷偷房子那题")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("蛇形打印二叉树")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")])])]),v._v(" "),t("hr"),v._v(" "),t("Vssue",{attrs:{title:v.$title}})],1)}),[],!1,null,null,null);_.default=l.exports}}]);