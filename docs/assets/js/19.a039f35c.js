(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{284:function(n,e,l){"use strict";l.r(e);var a=l(28),r=Object(a.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const arr = [null, null, 1, 4, 5, 6, 2, 4, 5, 1, 7, 8, '19', 19, '19', 18, '18'];\n\n// set 去重\n// console.log([...new Set(arr)])\n\n// includes 去重\n// let newArr = [];\n\n// arr.forEach((val) => {\n//     if (!newArr.includes(val)) {\n//         newArr.push(val)\n//     }\n// })\n\n// console.log(newArr)\n\n// object 去重\n// 哈希, typeof 用来区别数字和字符串\n// let newArr = [];\n// let obj = {};\n// arr.forEach((val) => {\n//     if (!obj[val + typeof val]) {\n//         newArr.push(val);\n//         obj[val + typeof val] = 1;\n//     }\n// })\n\n// console.log(newArr)\n\n// 统计\n// let obj = {};\n// arr.forEach((val) => {\n//     if (!obj[ typeof val + ' ' + val]) {\n//         obj[ typeof val + ' ' + val] = 1;\n//     }else{\n//         obj[ typeof val + ' ' + val]++ ;\n//     }\n// })\n\n// console.log(obj)\n\n// 统计 重复值\n// let repeat_arr = [];\n// let obj = {};\n// arr.forEach((val) => {\n//     if (obj[val + typeof val]) {\n//         repeat_arr.push(val);\n//     }else{\n//         obj[val + typeof val] = 1;\n//     }\n// })\n\n// console.log(repeat_arr)\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);