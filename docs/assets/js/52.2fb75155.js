(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{523:function(t,s,a){"use strict";a.r(s);var e=a(47),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("本文主要以 babel 7.x 及以上")]),t._v(" "),a("p",[t._v("参考")]),t._v(" "),a("p",[t._v("https://babeljs.io/docs/en/babel-preset-env#usebuiltins")])]),t._v(" "),a("h3",{attrs:{id:"babel-preset-env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-preset-env"}},[t._v("#")]),t._v(" @babel/preset-env")]),t._v(" "),a("p",[t._v("根据 target environment 转化语法和作为可选项引入相应的 polyfills")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：@babel/preset-env 不会包含低于 Stage 3  的 JavaScript语法建议，因为在 TC39 流程的那个阶段，任何浏览器都还不会去实现它。")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210422160623302.png",alt:"image-20210422160623302"}}),t._v(" "),a("h4",{attrs:{id:"target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#target"}},[t._v("#")]),t._v(" Target")]),t._v(" "),a("p",[t._v("该参数决定了我们项目需要适配到的环境，默认情况下，除非设置了 target 或 ignoreBrowserslistConfig 选项，否则 @ babel/preset-env 将使用browserslist配置源。")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"${images}/image-20210415211727828.png",alt:"image-20210415211727828"}}),t._v(" "),a("p",[t._v("如果未设置  target environment，将 transform all ES2015-ES2020 code to be ES5 compatible， babel 7 并不会设置 target 为 default 选项（babel 8 可能会改变）。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@babel/preset-env"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"targets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"defaults"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("target environment 查询语法参考 https://github.com/browserslist/browserslist#queries")]),t._v(" "),a("h4",{attrs:{id:"usebuiltins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins"}},[t._v("#")]),t._v(" useBuiltIns")]),t._v(" "),a("p",[t._v('"usage" | "entry" | false, defaults to false')]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useBuiltIns: false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在入口中引入，会把所有的 polyfills 全部打入，造成包体积庞大")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'core-js/stable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'regenerator-runtime/runtime'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useBuiltIns: usage")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在项目的入口文件处不需要 import 对应的 polyfills 相关库。babel 会根据用户代码的使用情况，并根据 targets 自行注入相关 polyfills。")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useBuiltIns: entry")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在项目的入口文件处 import 对应的 polyfills 相关库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时 babel 会根据当前 targets 描述，把需要的所有的 polyfills 全部引入到你的入口文件")]),t._v("\n")])])]),a("h4",{attrs:{id:"corejs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#corejs"}},[t._v("#")]),t._v(" corejs")]),t._v(" "),a("p",[t._v("简单讲 corejs-2 不会维护了，所有浏览器新 feature 的 polyfill 都会维护在 corejs-3 上。")]),t._v(" "),a("p",[t._v("By default, only polyfills for stable ECMAScript features are injected")]),t._v(" "),a("p",[t._v("useBuiltIns")]),t._v(" "),a("ul",[a("li",[t._v("entry：直接 import 对应的  "),a("a",{attrs:{href:"https://github.com/zloirock/core-js/tree/master/packages/core-js/proposals",target:"_blank",rel:"noopener noreferrer"}},[t._v("proposal polyfill"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("usage："),a("code",[t._v('corejs: { version: "3.8", proposals: true }')])])]),t._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@babel/preset-env"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"targets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chrome"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"58"')]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按自己需要填写")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"useBuiltIns"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"entry"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"corejs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proposals"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'core-js/stable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'regenerator-runtime/runtime'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口文件代码")]),t._v("\n")])])]),a("p",[t._v("这样配置的原因是：targets 下设置我们业务项目所需要支持的最低环境配置，useBuiltIns 设置为 entry 为，将最低环境不支持的所有 polyfill 都引入到入口文件（即使你在你的业务代码中并未使用）。这是一种兼顾最终打包体积和稳妥的方式，为什么说稳妥呢，因为我们很难保证引用的三方包有处理好 polyfill 这些问题。当然如果你能充分保证你的三方依赖 polyfill 处理得当，那么也可以把 useBuiltIns 设置为 usage。")]),t._v(" "),a("h3",{attrs:{id:"babel-plugin-transform-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-runtime"}},[t._v("#")]),t._v(" @babel/plugin-transform-runtime")]),t._v(" "),a("p",[t._v("问题一：还是会有一定程度的代码重复")]),t._v(" "),a("p",[t._v("问题二：针对项目，polyfill 会污染全局可以接受，但是作为 Library 我更希望它不会污染全局环境")]),t._v(" "),a("p",[t._v("需要注意的是，一旦采用 @babel/plugin-transform-runtime, @babel/preset-env 中的 targets 将会失效")]),t._v(" "),a("hr"),t._v(" "),a("Vssue",{attrs:{title:t.$title}})],1)}),[],!1,null,null,null);s.default=n.exports}}]);