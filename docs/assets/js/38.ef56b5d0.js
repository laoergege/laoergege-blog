(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{281:function(e,a,t){"use strict";t.r(a);var o=t(28),s=Object(o.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),t("p",[e._v("阅读 "),t("a",{attrs:{href:"#"}},[e._v("JavaScript 高级程序设计/离线应用与客户端存储")]),e._v("\n离线 web 应用：即使不能上网的情况下，应用还能运行。开发一个能够离线运行 web 应用首要两点：")]),e._v(" "),t("ul",[t("li",[e._v("确定设备是否能上网，以便执行相应的操作")]),e._v(" "),t("li",[e._v("缓存应用文件及数据，以便应用能够访问一定资源")])]),e._v(" "),t("h3",{attrs:{id:"离线检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#离线检测"}},[e._v("#")]),e._v(" 离线检测")]),e._v(" "),t("p",[t("strong",[e._v("Navigator")])]),e._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("navigator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("online"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 正常工作")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 执行离线任务")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),t("p",[e._v("为了检测应用是否离线，在页面加载后，最好先通过 navigator.onLine 取得初始状态，然后监听离线事件，确认网络连接状态是否变化。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("window.addEventListener('online/offline', () => {alert('onLine')})\n")])])]),t("h3",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),t("h4",{attrs:{id:"http-cache-之强缓存、协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-cache-之强缓存、协商缓存"}},[e._v("#")]),e._v(" http-cache 之强缓存、协商缓存")]),e._v(" "),t("p",[e._v("阅读")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/d2zeGhUptGUGJpB5xHQbOA",target:"_blank",rel:"noopener noreferrer"}},[e._v("彻底理解浏览器的缓存机制"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/yf0pWRFM7v9Ru3D9_JhGPQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("浏览器缓存机制剖析"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("当浏览器请求资源时，会先进行缓存查看，若强缓存策略（Expires 和 Cache-control）生效则直接使用缓存。若不生效则进行协商缓存策略（Last-Modified / If-Modified-Since 和 Etag / If-None-Match）,由服务器进行缓存验证，若协商缓存失效，那么代表该请求的缓存失效，重新获取请求结果，再存入浏览器缓存中；生效则返回304，继续使用缓存。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/meG6Vo0Mevgq38cXiaLvaxNIiatrA806UA6eZ3dqoKdgIhPENicUjaXXict6LuQDYsGNHFrddiayooqibHN50ZUCbYog/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1",alt:""}})]),e._v(" "),t("h4",{attrs:{id:"cookie、storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie、storage"}},[e._v("#")]),e._v(" Cookie、Storage")]),e._v(" "),t("p",[e._v("阅读 "),t("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[e._v("缓存（三）——数据存储：cookie、Storage、indexedDB"),t("OutboundLink")],1)]),e._v(" "),t("h5",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" Cookie")]),e._v(" "),t("p",[e._v("Cookie 是存储在客户端的一小段信息，会自动随着同源请求发送到服务器，内容包括：名字、值、域、路径、时间、大小。\n路径与域一起构成cookie的作用范围，cookie可以通过设置domain属性值，设置了 HttpOnly 属性的 cookie 不能使用 JavaScript 设置 Document.cookie 属性。")]),e._v(" "),t("p",[e._v("常用的配置属性有以下几个")]),e._v(" "),t("ul",[t("li",[e._v("Expires ：cookie最长有效期")]),e._v(" "),t("li",[e._v("Max-Age：在 cookie 失效之前需要经过的秒数。（当Expires和Max-Age同时存在时，文档中给出的是已Max-Age为准，可是我自己用Chrome实验的结果是取二者中最长有效期的值）")]),e._v(" "),t("li",[e._v("Domain：指定 cookie 可以送达的主机名。")]),e._v(" "),t("li",[e._v("Path：指定一个 URL 路径，这个路径必须出现在要请求的资源的路径中才可以发送 Cookie 首部")]),e._v(" "),t("li",[e._v("Secure：一个带有安全属性的 cookie 只有在请求使用SSL和HTTPS协议的时候才会被发送到服务器。")]),e._v(" "),t("li",[e._v("HttpOnly:设置了 HttpOnly 属性的 cookie 不能使用 JavaScript 经由 Document.cookie 属性、XMLHttpRequest 和 Request APIs 进行访问，以防范跨站脚本攻击（XSS）。")])]),e._v(" "),t("h6",{attrs:{id:"javascritpt-中的-cookie-操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascritpt-中的-cookie-操作"}},[e._v("#")]),e._v(" JavaScritpt 中的 cookie 操作")]),e._v(" "),t("p",[t("code",[e._v("document.cookie")]),e._v(" 能够获取仅对当前页面可用的 cookie （根据 cookie 的 demian、path、失效时间、secure），结果如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("name1=value1;name2=value2\n")])])]),t("p",[e._v("所有的名字和值都是经过 URI 编码的，所以在获取或者设置的时候分别使用 decodeURIComponent 和 ecodeURIComponent 来解码或编码。")]),e._v(" "),t("p",[e._v("当设置新的 cookie 时")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('document.cookie = encodeURIComponent("name") + \'=\' + encodeURIComponent("value")\n')])])]),t("p",[e._v("这个结果值会被解析添加到原来 cookie 集合中，当 name 值与原有的 cookie 一样时，就会覆盖该 cookie。")]),e._v(" "),t("h5",{attrs:{id:"localstorage，sessionstorage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage，sessionstorage"}},[e._v("#")]),e._v(" localStorage，sessionStorage")]),e._v(" "),t("p",[e._v("localStorage，sessionStorage 明文方式存储字符串内容，api：setItem、getItem、removeItem、key、clear")]),e._v(" "),t("p",[e._v("监听storage事件：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("window.addEventListener('storage',function(e){\n   console.log('key='+e.key+',oldValue='+e.oldValue+',newValue='+e.newValue);\n})\n")])])]),t("h5",{attrs:{id:"localstorage，sessionstorage和cookie的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#localstorage，sessionstorage和cookie的区别"}},[e._v("#")]),e._v(" localStorage，sessionStorage和cookie的区别")]),e._v(" "),t("ul",[t("li",[e._v("相同：保存在浏览器，有同源策略")]),e._v(" "),t("li",[e._v("区别：\n"),t("ul",[t("li",[e._v("大小\n"),t("ul",[t("li",[e._v("cookie 不能超过4K")]),e._v(" "),t("li",[e._v("localStorage，sessionStorage 不能超 5M")])])]),e._v(" "),t("li",[e._v("生命周期\n"),t("ul",[t("li",[e._v("cookie 可以设置过期时间")]),e._v(" "),t("li",[e._v("sessionStorage 仅在当前浏览器窗口关闭之前有效")]),e._v(" "),t("li",[e._v("localStorage 长期存储")])])]),e._v(" "),t("li",[e._v("作用域\n"),t("ul",[t("li",[e._v("sessionStorage 在当前浏览器窗口共享")]),e._v(" "),t("li",[e._v("cookie、localstorage 在同源窗口共享")])])]),e._v(" "),t("li",[e._v("其他\n"),t("ul",[t("li",[e._v("cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，而sessionStorage和localStorage不会自动把数据发送给服务器，仅在本地保存。cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下")])])])])])])])}),[],!1,null,null,null);a.default=s.exports}}]);